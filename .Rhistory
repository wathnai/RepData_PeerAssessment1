library("swirl")
swirl()
swirl()
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch = 3, cex=2, lwd = 2)
mdist(cs, cy)
mdist(cx, cy)
mdist(x, y)
mdist
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x, y, pch =19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1 = pch = 8, cex = 2, lwd = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch = 19, cex =2 , col= cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy, col = cols1, pch = 9 , cex =2 , lwd = 2)
kmeans( dataFrame, centers = 3)
kmobj$iter
kmObj$iter
plot(x,y, col= kmObj$cluster, pch =19, cex= 2)
points(kmObj$centers,  ol = c("black", "red", "green"), pch = 3, cex =3, lwd = 3)
points(kmObj$centers,  col = c("black", "red", "green"), pch = 3, cex =3, lwd = 3)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch= 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch= 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch= 19, cex = 2)
head(dataMAtrix)
head(dataMatrix)
heatmap(dataMatrix)
myedit(addPatt.R)
myedit addPatt.R
myedit(addPatt.R)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMAtrix)
heatmap (dataMatrix)
mat
svd(mat)
matu * diag * matv
matu %*% diag %*% t(matv)
svd(scale(mat)
)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d[],1:2]
svd2$d[,1:2]
svd2$d
faceData
dim(faceData)
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2 <- svd1$u[,1:2] %*%  diag(svd1$d[1:2])  %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*%  diag(svd1$d[1:5])  %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*%  diag(svd1$d[1:10])  %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd, -2)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
View(ssd)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
dist(x[1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(sub1[,10:12], %%dist(maxCon))
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering(mdist)
hclustering<- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon]
)
kClust <- kmeans(sub1[,-2], centers=6)
kClust <- kmeans(sub1[,-2
)
kClust <- kmeans(sub1[,n-2], centers = 6)
kClust <- kmeans(sub1[-c(,-2)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(x$y)
dim(kClust$centers)
View(samsungData)
View(samsungData)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab = "Laying Cluster")
names(sub1[1:3])
walkdown <- which(kclust$size=49
walkdown <- which(kclust$size=49)
walkdown <- which(kClust$size=49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library("swirl")
swirl()
dim(pm0)
View(pm0)
head(pm0)
cnames
strsplit(cnames, "|" , fixed = TRUE )
cnames <- strsplit(cnames, "|" , fixed = TRUE )
canmes
cnames
names(pm0) <- cnames[[1]][wcol]
names(pm0) <- make.cnames(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative,na.rom =true)
sum(negative,na.rm =true)
sum(negative, na.rm = true)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, )
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pmsub0 <- subset(cnt0, cnt0$County.Code == 63 & cnt0$Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow(c(1,2)),mar(c(4,4,2,1))
)
par(mfrow(c(1,2)),mar(c(4,4,2,1)))
par(mfrow(c(1,2)),mar(c(4,4,2,1)))
par(mfro(c(1,2)),mar(c(4,4,2,1)))
par(mfrow=c(1,2)),mar=c(4,4,2,1)))
par(mfrow=c(1,2)), ar=c(4,4,2,1)))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(lwd = 2, median(x0sub), na.rm= TRUE)
abline(median(x0sub), lwd=2, na.rm= TRUE)
abline(median=x0sub, lwd=2, na.rm= TRUE)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0,tapply(SAmple.value, State.Code, mean(SAmple.value). na.rm = TRUE))
mn0 <- with(pm0,tapply(SAmple.value), State.Code, mean(SAmple.value). na.rm = TRUE))
mn0 <- with(pm0,tapply(SAmple.value), State.Code, mean(SAmple.value),na.rm = TRUE))
mn0 <- with(pm0,tapply(SAmple.value), State.Code, mean(SAmple.value),na.rm = TRUE)
mn0 <- with(pm0), tapply(SAmple.value), State.Code, mean(SAmple.value),na.rm = TRUE)
mn0 <- with(pm0), tapply(SAmple.value, State.Code, mean(SAmple.value),na.rm = TRUE)
mn0 <- pm0, tapply(SAmple.value, State.Code, mean(SAmple.value),na.rm = TRUE)
mn0 <- pm0, tapply(SAmple.value, State.Code, mean(SAmple.value),na.rm = TRUE)
skip()
mn0
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mgr <- merge(d0, d1, set = "state")
mgr <- merge(d0, d1, by = "state")
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, rep(1,52), mrg[,2], xlim=c(.5,2.5))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3])
)
segments()
skip()
mrg[mrg$mean.x < mrg$mean.y, ]
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Data_Scientist/Reproducible Research/RepData_PeerAssessment1")
ls
ls()
dir()
unzip (activity.zip)
unzip (./activity.zip)
unzip ("activity.zip")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Data_Scientist/Reproducible Research/RepData_PeerAssessment1")
unzip (activity.zip) # extracts the content of the zip file
setwd("~/Data_Scientist/Reproducible Research/RepData_PeerAssessment1")
unzip ("activity.zip") # extracts the content of the zip file
read.csv("activity.csv") # loads the dataset
head("activity.csv")
head(activity.csv)
setwd("~/Data_Scientist/Reproducible Research/RepData_PeerAssessment1")
unzip ("activity.zip") # extracts the content of the zip file
activity <- read.csv("activity.csv") # loads the dataset
head("activity")
View(activity)
heads("activity")
head(activity)
hist(activity$date)
hist(activity$steps)
hist(activity)
char(activity)
char(activity$date)
character(activity$date)
character(activity)
class(activity)
class(activity$date)
activity1 <- as.Date(activity$date, format = "%Y%m%d")
head(activity1)
activity1 <- activity
activity1$date <- as.Date(activity1$date, format = "%Y%m%d")
head(activity1)
activity1 <- activity
head(activity1)
activity1$date <- as.Date(activity1$date, format = "%Y/%m/%d")
head(activity1)
activity1 <- activity
activity1$date <- as.Date(activity1$date, format = "%y/%m/%d")
head(activity1)
activity1 <- activity
class(activity1$date)
activity1$date <- as.Date(activity1$date, format = "%y-%m-%d")
head(activity1)
activity1 <- activity
activity1$date <- as.Date(activity1$date, format = "%Y-%m-%d")
head(activity1)
class(activity1$date)
hist(activity)
hist(activity$steps)
hist(activity$date)
activity1 <- activity
activity1$date <- as.numeric(activity1$date)
hist(activity$date)
hist(activity1$date)
activity1 <- activity
activity1$date <- as.Date(activity1$date, format = "%Y-%m-%d")
hist(activity1$date)
hist(activity1$date ,, breaks = 50)
hist(activity1$date , breaks = 50)
activity1 <- activity
activity1$date <- as.Date(activity1$date, format = "%Y-%m-%d")
aggregate(activity1$steps , by= list(activity1$date), sum)
groupbydate <- aggregate(activity1$steps , by= list(activity1$date), sum)
hist(groupbydate)
hist(groupbydate$steps)
head(groupbydate)
hist(groupbydate$Group.1)
hist(groupbydate$Group.1, breaks = 50)
hist(groupbydate$x, breaks = 50)
activity1 <- activity
activity1$date <- as.Date(activity1$date, format = "%Y-%m-%d")
hist(groupbydate$x, breaks = 1000)
hist(groupbydate$Group.1, breaks = 1000)
hist(groupbydate, breaks = 1000)
head(groupbydate)
hist(groupbydate$Group.1)
hist(groupbydate$Group.1, breaks = 1)
hist(groupbydate$Group.1, breaks = 1000)
hist(groupbydate$Group.1, breaks = 10)
dim(groupbydate)
hist(groupbydate$Group.1, breaks = 61)
hist(groupbydate$Group.1, breaks = 61, ylim = c(0, 25000))
class(groupbydate$x)
groupbydate$x <- as.numeric(groupbydate$x)
hist(groupbydate$Group.1, breaks = 61, ylim = c(0, 25000))
head(groupbydate)
hist(groupbydate$x)
hist(groupbydate$x , breaks = 61)
hist(groupbydate$Group.1 , breaks = 61)
activity1 <- activity
activity1 <- (activity, na.rm= True)
activity1 <- c(activity, na.rm= True)
activity1 <- c(activity, na.rm= TRUE)
head(activity1)
activity1 <- activity[!is.na(activity)]
head(activity1)
activity1 <- [complete.cases(activity),]
activity1 <- [complete.cases(activity), ]
activity1 <- na.omit(activity)
head(activity1)
aggregate(activity1["steps"], by=activity1["Date"], sum)
aggregate(activity1$steps, by=activity1$date, sum)
library(dplyr)
library("dplyr")
setwd("~/Data_Scientist/Reproducible Research/RepData_PeerAssessment1")
unzip ("activity.zip") # extracts the content of the zip file
activity <- read.csv("activity.csv") # loads the dataset
steps_by_day <- group_by(activity, date)
library(dplyr)
library("dplyr")
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
